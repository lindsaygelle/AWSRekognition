{
    "StartAt": "ParallelCheckInput",
    "States": {
        "ParallelCheckInput": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "CheckInputRekognition",
                    "States": {
                        "CheckInputRekognition": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.Rekognition",
                                    "IsPresent": true,
                                    "Next": "CheckInputDetectFaces"
                                }
                            ],
                            "Default": "DefaultInputRekognition"
                        },
                        "DefaultInputRekognition": {
                            "Type": "Pass",
                            "Parameters": {
                                "Rekognition": {}
                            },
                            "Next": "CheckInputDetectFaces"
                        },
                        "CheckInputDetectFaces": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.DetectFaces",
                                    "IsPresent": true,
                                    "Next": "ParallelCheckInputDetectFaces"
                                }
                            ],
                            "InputPath": "$.Rekognition",
                            "Default": "DefaultInputDetectFaces"
                        },
                        "DefaultInputDetectFaces": {
                            "Type": "Pass",
                            "Parameters": {
                                "DetectFaces": {}
                            },
                            "Next": "ParallelCheckInputDetectFaces"
                        },
                        "ParallelCheckInputDetectFaces": {
                            "Type": "Parallel",
                            "End": true,
                            "Branches": [
                                {
                                    "StartAt": "CheckInputAttributes",
                                    "States": {
                                        "CheckInputAttributes": {
                                            "Type": "Choice",
                                            "Choices": [
                                                {
                                                    "Variable": "$.Attributes",
                                                    "IsPresent": true,
                                                    "Next": "MapInputAttributes"
                                                }
                                            ],
                                            "Default": "DefaultInputAttributes"
                                        },
                                        "MapInputAttributes": {
                                            "Type": "Map",
                                            "ItemProcessor": {
                                                "ProcessorConfig": {
                                                    "Mode": "INLINE"
                                                },
                                                "StartAt": "CheckValueAttribute",
                                                "States": {
                                                    "CheckValueAttribute": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "And": [
                                                                    {
                                                                        "Variable": "$",
                                                                        "IsString": true
                                                                    },
                                                                    {
                                                                        "Or": [
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "AGE_RANGE"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "ALL"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "BEARD"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "DEFAULT"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "EMOTIONS"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "EYEGLASSES"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "EYES_OPEN"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "EYE_DIRECTION"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "FACE_OCCLUDED"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "GENDER"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "MOUTH_OPEN"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "MUSTACHE"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "SMILE"
                                                                            },
                                                                            {
                                                                                "Variable": "$",
                                                                                "StringEquals": "SUNGLASSES"
                                                                            }
                                                                        ]
                                                                    }
                                                                ],
                                                                "Next": "PassValueAttribute"
                                                            }
                                                        ],
                                                        "Default": "FailCheckValueAttribute"
                                                    },
                                                    "PassValueAttribute": {
                                                        "Type": "Pass",
                                                        "End": true
                                                    },
                                                    "FailCheckValueAttribute": {
                                                        "Type": "Fail"
                                                    }
                                                }
                                            },
                                            "End": true,
                                            "ItemsPath": "$.Attributes"
                                        },
                                        "DefaultInputAttributes": {
                                            "Type": "Pass",
                                            "Parameters": {
                                                "Attributes": [
                                                    "ALL"
                                                ]
                                            },
                                            "Next": "MapInputAttributes"
                                        }
                                    }
                                }
                            ],
                            "ResultSelector": {
                                "DetectFaces": {
                                    "Attributes.$": "$[0]"
                                }
                            },
                            "InputPath": "$.DetectFaces"
                        }
                    }
                },
                {
                    "StartAt": "CheckInputS3",
                    "States": {
                        "CheckInputS3": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.S3",
                                    "IsPresent": true,
                                    "Next": "ParallelCheckInputS3"
                                }
                            ],
                            "Default": "FailCheckS3Input"
                        },
                        "ParallelCheckInputS3": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "CheckInputBucket",
                                    "States": {
                                        "CheckInputBucket": {
                                            "Type": "Choice",
                                            "Choices": [
                                                {
                                                    "Variable": "$.Bucket",
                                                    "IsPresent": true,
                                                    "Next": "CheckInputBucketName"
                                                }
                                            ],
                                            "Default": "FailCheckInputBucket"
                                        },
                                        "CheckInputBucketName": {
                                            "Type": "Choice",
                                            "Choices": [
                                                {
                                                    "And": [
                                                        {
                                                            "Variable": "$.Name",
                                                            "IsPresent": true
                                                        },
                                                        {
                                                            "Variable": "$.Name",
                                                            "IsString": true
                                                        }
                                                    ],
                                                    "Next": "HeadBucket"
                                                }
                                            ],
                                            "Default": "FailCheckInputBucketName",
                                            "InputPath": "$.Bucket"
                                        },
                                        "HeadBucket": {
                                            "Type": "Task",
                                            "Parameters": {
                                                "Bucket.$": "$.Name"
                                            },
                                            "Resource": "arn:aws:states:::aws-sdk:s3:headBucket",
                                            "Catch": [
                                                {
                                                    "ErrorEquals": [
                                                        "States.TaskFailed"
                                                    ],
                                                    "Next": "FailHeadBucket"
                                                }
                                            ],
                                            "ResultPath": "$.Output",
                                            "Next": "PassHeadBucket"
                                        },
                                        "PassHeadBucket": {
                                            "Type": "Pass",
                                            "End": true,
                                            "Parameters": {
                                                "AccessPointAlias.$": "$.Output.AccessPointAlias",
                                                "Name.$": "$.Name",
                                                "Region.$": "$.Output.BucketRegion"
                                            }
                                        },
                                        "FailHeadBucket": {
                                            "Type": "Fail"
                                        },
                                        "FailCheckInputBucketName": {
                                            "Type": "Fail"
                                        },
                                        "FailCheckInputBucket": {
                                            "Type": "Fail"
                                        }
                                    }
                                },
                                {
                                    "StartAt": "CheckInputObject",
                                    "States": {
                                        "CheckInputObject": {
                                            "Type": "Choice",
                                            "Choices": [
                                                {
                                                    "Variable": "$.Object",
                                                    "IsPresent": true,
                                                    "Next": "CheckInputKey"
                                                }
                                            ],
                                            "Default": "FailCheckInputObject"
                                        },
                                        "CheckInputKey": {
                                            "Type": "Choice",
                                            "Choices": [
                                                {
                                                    "And": [
                                                        {
                                                            "Variable": "$.Key",
                                                            "IsPresent": true
                                                        },
                                                        {
                                                            "Variable": "$.Key",
                                                            "IsString": true
                                                        }
                                                    ],
                                                    "Next": "PassInputKey"
                                                }
                                            ],
                                            "Default": "FailCheckInputKey",
                                            "InputPath": "$.Object"
                                        },
                                        "PassInputKey": {
                                            "Type": "Pass",
                                            "End": true
                                        },
                                        "FailCheckInputKey": {
                                            "Type": "Fail"
                                        },
                                        "FailCheckInputObject": {
                                            "Type": "Fail"
                                        }
                                    }
                                }
                            ],
                            "InputPath": "$.S3",
                            "ResultSelector": {
                                "Bucket.$": "$[0]",
                                "Object.$": "$[1]"
                            },
                            "Next": "HeadObject"
                        },
                        "HeadObject": {
                            "Type": "Task",
                            "Parameters": {
                                "Bucket.$": "$.Bucket.Name",
                                "Key.$": "$.Object.Key"
                            },
                            "Resource": "arn:aws:states:::aws-sdk:s3:headObject",
                            "ResultPath": "$.Output",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.TaskFailed"
                                    ],
                                    "Next": "FailHeadObject"
                                }
                            ],
                            "Next": "PassHeadObject"
                        },
                        "PassHeadObject": {
                            "Type": "Pass",
                            "Parameters": {
                                "Bucket.$": "$.Bucket",
                                "Object.$": "States.JsonMerge($.Object, $.Output, false)"
                            },
                            "Next": "GetObjectAttributes"
                        },
                        "GetObjectAttributes": {
                            "Type": "Task",
                            "Parameters": {
                                "Bucket.$": "$.Bucket.Name",
                                "Key.$": "$.Object.Key",
                                "ObjectAttributes": [
                                    "Checksum",
                                    "ETag",
                                    "ObjectParts",
                                    "ObjectSize",
                                    "StorageClass"
                                ]
                            },
                            "Resource": "arn:aws:states:::aws-sdk:s3:getObjectAttributes",
                            "ResultPath": "$.Output",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.TaskFailed"
                                    ],
                                    "Next": "FailGetObjectAttributes"
                                }
                            ],
                            "Next": "PassGetObjectAttributes"
                        },
                        "PassGetObjectAttributes": {
                            "Type": "Pass",
                            "End": true,
                            "Parameters": {
                                "Bucket.$": "$.Bucket",
                                "Object.$": "States.JsonMerge($.Object, $.Output, false)"
                            }
                        },
                        "FailGetObjectAttributes": {
                            "Type": "Fail"
                        },
                        "FailHeadObject": {
                            "Type": "Fail"
                        },
                        "FailCheckS3Input": {
                            "Type": "Fail"
                        }
                    }
                }
            ],
            "Next": "DetectFaces",
            "ResultSelector": {
                "Rekognition.$": "$[0]",
                "S3.$": "$[1]"
            }
        },
        "DetectFaces": {
            "Type": "Task",
            "Parameters": {
                "Attributes.$": "$.Rekognition.DetectFaces.Attributes",
                "Image": {
                    "S3Object": {
                        "Bucket.$": "$.S3.Bucket.Name",
                        "Name.$": "$.S3.Object.Key"
                    }
                }
            },
            "Resource": "arn:aws:states:::aws-sdk:rekognition:detectFaces",
            "Next": "ParallelCheckOutputDetectFaces",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.TaskFailed"
                    ],
                    "Next": "FailDetectFaces"
                }
            ],
            "ResultPath": "$.Output"
        },
        "ParallelCheckOutputDetectFaces": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "CheckOutputFaceDetails",
                    "States": {
                        "CheckOutputFaceDetails": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.FaceDetails",
                                    "IsPresent": true,
                                    "Next": "MapFaceDetails"
                                }
                            ],
                            "Default": "DefaultOutputFaceDetails",
                            "InputPath": "$.Output"
                        },
                        "MapFaceDetails": {
                            "Type": "Map",
                            "ItemProcessor": {
                                "ProcessorConfig": {
                                    "Mode": "INLINE"
                                },
                                "StartAt": "CheckOutputFaceDetail",
                                "States": {
                                    "CheckOutputFaceDetail": {
                                        "Type": "Parallel",
                                        "End": true,
                                        "Branches": [
                                            {
                                                "StartAt": "CheckOutputAgeRange",
                                                "States": {
                                                    "CheckOutputAgeRange": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.AgeRange",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputAgeRange"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputAgeRange"
                                                    },
                                                    "PassOutputAgeRange": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.AgeRange"
                                                    },
                                                    "DefaultOutputAgeRange": {
                                                        "Type": "Pass",
                                                        "Parameters": {
                                                            "AgeRange": null
                                                        },
                                                        "End": true,
                                                        "OutputPath": "$.AgeRange"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputBeard",
                                                "States": {
                                                    "CheckOutputBeard": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Beard",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputBeard"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputBeard"
                                                    },
                                                    "PassOutputBeard": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Beard"
                                                    },
                                                    "DefaultOutputBeard": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Beard": null
                                                        },
                                                        "OutputPath": "$.Beard"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputBoundingBox",
                                                "States": {
                                                    "CheckOutputBoundingBox": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.BoundingBox",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputBoundingBox"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputBoundingBox"
                                                    },
                                                    "PassOutputBoundingBox": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.BoundingBox"
                                                    },
                                                    "DefaultOutputBoundingBox": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "BoundingBox": null
                                                        },
                                                        "OutputPath": "$.BoundingBox"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "PassOutputConfidence",
                                                "States": {
                                                    "PassOutputConfidence": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Confidence"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputEmotions",
                                                "States": {
                                                    "CheckOutputEmotions": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Emotions",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputEmotions"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputEmotions"
                                                    },
                                                    "PassOutputEmotions": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Emotions"
                                                    },
                                                    "DefaultOutputEmotions": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Emotions": null
                                                        },
                                                        "OutputPath": "$.Emotions"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputEyeDirection",
                                                "States": {
                                                    "CheckOutputEyeDirection": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.EyeDirection",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputEyeDirection"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputEyeDirection"
                                                    },
                                                    "PassOutputEyeDirection": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.EyeDirection"
                                                    },
                                                    "DefaultOutputEyeDirection": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "EyeDirection": null
                                                        },
                                                        "OutputPath": "$.EyeDirection"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputEyeglasses",
                                                "States": {
                                                    "CheckOutputEyeglasses": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Eyeglasses",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputEyeglasses"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputEyeglasses"
                                                    },
                                                    "PassOutputEyeglasses": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Eyeglasses"
                                                    },
                                                    "DefaultOutputEyeglasses": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Eyeglasses": null
                                                        },
                                                        "OutputPath": "$.Eyeglasses"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputEyesOpen",
                                                "States": {
                                                    "CheckOutputEyesOpen": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.EyesOpen",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputEyesOpen"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputEyesOpen"
                                                    },
                                                    "PassOutputEyesOpen": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.EyesOpen"
                                                    },
                                                    "DefaultOutputEyesOpen": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "EyesOpen": null
                                                        },
                                                        "OutputPath": "$.EyesOpen"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputFaceOccluded",
                                                "States": {
                                                    "CheckOutputFaceOccluded": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.FaceOccluded",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputFaceOccluded"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputFaceOccluded"
                                                    },
                                                    "PassOutputFaceOccluded": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.FaceOccluded"
                                                    },
                                                    "DefaultOutputFaceOccluded": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "FaceOccluded": null
                                                        },
                                                        "OutputPath": "$.FaceOccluded"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputGender",
                                                "States": {
                                                    "CheckOutputGender": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Gender",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputGender"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputGender"
                                                    },
                                                    "PassOutputGender": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Gender"
                                                    },
                                                    "DefaultOutputGender": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Gender": null
                                                        },
                                                        "OutputPath": "$.Gender"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "PassOutputIdParameters",
                                                "States": {
                                                    "PassOutputIdParameters": {
                                                        "Type": "Pass",
                                                        "Parameters": {
                                                            "BoundingBox.$": "$.BoundingBox",
                                                            "Confidence.$": "$.Confidence",
                                                            "Pose.$": "$.Pose",
                                                            "Quality.$": "$.Quality",
                                                            "Landmarks.$": "$.Landmarks"
                                                        },
                                                        "Next": "DefaultOutputId"
                                                    },
                                                    "DefaultOutputId": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Id.$": "States.Hash($, 'MD5')"
                                                        },
                                                        "OutputPath": "$.Id"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputLandmarks",
                                                "States": {
                                                    "CheckOutputLandmarks": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Landmarks",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputLandmarks"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputLandmarks"
                                                    },
                                                    "PassOutputLandmarks": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Landmarks"
                                                    },
                                                    "DefaultOutputLandmarks": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Landmarks": null
                                                        },
                                                        "OutputPath": "$.Landmarks"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputMouthOpen",
                                                "States": {
                                                    "CheckOutputMouthOpen": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.MouthOpen",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputMouthOpen"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputMouthOpen"
                                                    },
                                                    "PassOutputMouthOpen": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.MouthOpen"
                                                    },
                                                    "DefaultOutputMouthOpen": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "MouthOpen": null
                                                        },
                                                        "OutputPath": "$.MouthOpen"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputMustache",
                                                "States": {
                                                    "CheckOutputMustache": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Mustache",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputMustache"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputMustache"
                                                    },
                                                    "PassOutputMustache": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Mustache"
                                                    },
                                                    "DefaultOutputMustache": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Mustache": null
                                                        },
                                                        "OutputPath": "$.Mustache"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputPose",
                                                "States": {
                                                    "CheckOutputPose": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Pose",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputPose"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputPose"
                                                    },
                                                    "PassOutputPose": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Pose"
                                                    },
                                                    "DefaultOutputPose": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Pose": null
                                                        },
                                                        "OutputPath": "$.Pose"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputQuality",
                                                "States": {
                                                    "CheckOutputQuality": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Quality",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputQuality"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputQuality"
                                                    },
                                                    "PassOutputQuality": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Quality"
                                                    },
                                                    "DefaultOutputQuality": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Quality": null
                                                        },
                                                        "OutputPath": "$.Quality"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputSmile",
                                                "States": {
                                                    "CheckOutputSmile": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Smile",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputSmile"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputSmile"
                                                    },
                                                    "PassOutputSmile": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Smile"
                                                    },
                                                    "DefaultOutputSmile": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Smile": null
                                                        },
                                                        "OutputPath": "$.Smile"
                                                    }
                                                }
                                            },
                                            {
                                                "StartAt": "CheckOutputSunglasses",
                                                "States": {
                                                    "CheckOutputSunglasses": {
                                                        "Type": "Choice",
                                                        "Choices": [
                                                            {
                                                                "Variable": "$.Sunglasses",
                                                                "IsPresent": true,
                                                                "Next": "PassOutputSunglasses"
                                                            }
                                                        ],
                                                        "Default": "DefaultOutputSunglasses"
                                                    },
                                                    "PassOutputSunglasses": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "InputPath": "$.Sunglasses"
                                                    },
                                                    "DefaultOutputSunglasses": {
                                                        "Type": "Pass",
                                                        "End": true,
                                                        "Parameters": {
                                                            "Sunglasses": null
                                                        },
                                                        "OutputPath": "$.Sunglasses"
                                                    }
                                                }
                                            }
                                        ],
                                        "ResultSelector": {
                                            "AgeRange.$": "$[0]",
                                            "Beard.$": "$[1]",
                                            "BoundingBox.$": "$[2]",
                                            "Confidence.$": "$[3]",
                                            "Emotions.$": "$[4]",
                                            "EyeDirection.$": "$[5]",
                                            "Eyeglasses.$": "$[6]",
                                            "EyesOpen.$": "$[7]",
                                            "FaceOccluded.$": "$[8]",
                                            "Gender.$": "$[9]",
                                            "Id.$": "$[10]",
                                            "Landmarks.$": "$[11]",
                                            "MouthOpen.$": "$[12]",
                                            "Mustache.$": "$[13]",
                                            "Pose.$": "$[14]",
                                            "Quality.$": "$[15]",
                                            "Smile.$": "$[16]",
                                            "Sunglasses.$": "$[17]"
                                        }
                                    }
                                }
                            },
                            "End": true,
                            "ItemsPath": "$.FaceDetails"
                        },
                        "DefaultOutputFaceDetails": {
                            "Type": "Pass",
                            "Parameters": {
                                "FaceDetails": []
                            },
                            "Next": "MapFaceDetails"
                        }
                    }
                },
                {
                    "StartAt": "CheckOutputOrientationCorrection",
                    "States": {
                        "CheckOutputOrientationCorrection": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.OrientationCorrection",
                                    "IsPresent": true,
                                    "Next": "PassOrientationCorrection"
                                }
                            ],
                            "Default": "DefaultOutputOrientationCorrection",
                            "InputPath": "$.Output"
                        },
                        "PassOrientationCorrection": {
                            "Type": "Pass",
                            "End": true,
                            "InputPath": "$.OrientationCorrection"
                        },
                        "DefaultOutputOrientationCorrection": {
                            "Type": "Pass",
                            "Parameters": {
                                "OrientationCorrection": null
                            },
                            "Next": "PassOrientationCorrection"
                        }
                    }
                }
            ],
            "ResultSelector": {
                "FaceDetails.$": "$[0]",
                "OrientationCorrection.$": "$[1]"
            },
            "ResultPath": "$.Output",
            "Next": "StateMachineOutput"
        },
        "StateMachineOutput": {
            "Type": "Pass",
            "End": true,
            "Parameters": {
                "DetectFaces": {
                    "CreatedAt.$": "$$.Execution.StartTime",
                    "FaceDetails.$": "$.Output.FaceDetails",
                    "Id.$": "$.S3.Object.ETag",
                    "OrientationCorrection.$": "$.Output.OrientationCorrection"
                },
                "Execution": {
                    "Id.$": "$$.Execution.Id",
                    "Name.$": "$$.Execution.Name",
                    "StartTime.$": "$$.Execution.StartTime"
                },
                "S3.$": "$.S3",
                "StateMachine.$": "$$.StateMachine"
            }
        },
        "FailDetectFaces": {
            "Type": "Fail"
        }
    }
}
