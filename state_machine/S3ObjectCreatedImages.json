{
    "StartAt": "ProcessSQSEvent",
    "States": {
        "ProcessSQSEvent": {
            "Type": "Map",
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "INLINE"
                },
                "StartAt": "ParseSQSEventBody",
                "States": {
                    "ParseSQSEventBody": {
                        "Type": "Pass",
                        "Parameters": {
                            "awsRegion.$": "$.awsRegion",
                            "attributes.$": "$.attributes",
                            "body.$": "States.StringToJson($.body)",
                            "eventSource.$": "$.eventSource",
                            "eventSourceARN.$": "$.eventSourceARN",
                            "md5OfBody.$": "$.md5OfBody",
                            "messageAttributes.$": "$.messageAttributes",
                            "messageId.$": "$.messageId",
                            "receiptHandle.$": "$.receiptHandle"
                        },
                        "Next": "CheckSQSBodyRecords"
                    },
                    "CheckSQSBodyRecords": {
                        "Type": "Choice",
                        "Choices": [
                            {
                                "Variable": "$.body.Records",
                                "IsPresent": true,
                                "Next": "ParallelSQSBodyRecords"
                            }
                        ],
                        "Default": "InvalidSQSBody"
                    },
                    "InvalidSQSBody": {
                        "Type": "Pass",
                        "End": true
                    },
                    "ParallelSQSBodyRecords": {
                        "Type": "Parallel",
                        "End": true,
                        "Branches": [
                            {
                                "StartAt": "ProcessSQSBodyRecords",
                                "States": {
                                    "ProcessSQSBodyRecords": {
                                        "Type": "Map",
                                        "ItemProcessor": {
                                            "ProcessorConfig": {
                                                "Mode": "INLINE"
                                            },
                                            "StartAt": "ParallelSQSBodyRecord",
                                            "States": {
                                                "ParallelSQSBodyRecord": {
                                                    "Type": "Parallel",
                                                    "Branches": [
                                                        {
                                                            "StartAt": "CheckSQSBodyRecordEventName",
                                                            "States": {
                                                                "CheckSQSBodyRecordEventName": {
                                                                    "Type": "Choice",
                                                                    "Choices": [
                                                                        {
                                                                            "Or": [
                                                                                {
                                                                                    "Variable": "$.eventName",
                                                                                    "StringEquals": "ObjectCreated:Put"
                                                                                },
                                                                                {
                                                                                    "Variable": "$.eventName",
                                                                                    "StringEquals": "ObjectCreated:Post"
                                                                                },
                                                                                {
                                                                                    "Variable": "$.eventName",
                                                                                    "StringEquals": "ObjectCreated:Copy"
                                                                                },
                                                                                {
                                                                                    "Variable": "$.eventName",
                                                                                    "StringEquals": "ObjectCreated:CompleteMultipartUpload"
                                                                                }
                                                                            ],
                                                                            "Next": "ParallelRekognition"
                                                                        }
                                                                    ],
                                                                    "Default": "InvalidSQSBodyRecordEventName"
                                                                },
                                                                "ParallelRekognition": {
                                                                    "Type": "Parallel",
                                                                    "End": true,
                                                                    "Branches": [
                                                                        {
                                                                            "StartAt": "RekognitionDetectLabels",
                                                                            "States": {
                                                                                "RekognitionDetectLabels": {
                                                                                    "Type": "Task",
                                                                                    "End": true,
                                                                                    "Parameters": {
                                                                                        "Features": [
                                                                                            "GENERAL_LABELS",
                                                                                            "IMAGE_PROPERTIES"
                                                                                        ],
                                                                                        "Image": {
                                                                                            "S3Object": {
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Name.$": "$.s3.object.key"
                                                                                            }
                                                                                        },
                                                                                        "MaxLabels": 0,
                                                                                        "MinConfidence": 50
                                                                                    },
                                                                                    "Resource": "arn:aws:states:::aws-sdk:rekognition:detectLabels"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "StartAt": "RekognitionDetectFaces",
                                                                            "States": {
                                                                                "RekognitionDetectFaces": {
                                                                                    "Type": "Task",
                                                                                    "End": true,
                                                                                    "Parameters": {
                                                                                        "Attributes": [
                                                                                            "ALL"
                                                                                        ],
                                                                                        "Image": {
                                                                                            "S3Object": {
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Name.$": "$.s3.object.key"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "Resource": "arn:aws:states:::aws-sdk:rekognition:detectFaces"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "StartAt": "DetectModerationLabels",
                                                                            "States": {
                                                                                "DetectModerationLabels": {
                                                                                    "Type": "Task",
                                                                                    "End": true,
                                                                                    "Parameters": {
                                                                                        "Image": {
                                                                                            "S3Object": {
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Name.$": "$.s3.object.key"
                                                                                            }
                                                                                        },
                                                                                        "MinConfidence": 50
                                                                                    },
                                                                                    "Resource": "arn:aws:states:::aws-sdk:rekognition:detectModerationLabels"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "StartAt": "DetectProtectiveEquipment",
                                                                            "States": {
                                                                                "DetectProtectiveEquipment": {
                                                                                    "Type": "Task",
                                                                                    "End": true,
                                                                                    "Parameters": {
                                                                                        "Image": {
                                                                                            "S3Object": {
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Name.$": "$.s3.object.key"
                                                                                            }
                                                                                        },
                                                                                        "SummarizationAttributes": {
                                                                                            "MinConfidence": 50,
                                                                                            "RequiredEquipmentTypes": [
                                                                                                "FACE_COVER",
                                                                                                "HAND_COVER",
                                                                                                "HEAD_COVER"
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "Resource": "arn:aws:states:::aws-sdk:rekognition:detectProtectiveEquipment"
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "StartAt": "DetectText",
                                                                            "States": {
                                                                                "DetectText": {
                                                                                    "Type": "Task",
                                                                                    "End": true,
                                                                                    "Parameters": {
                                                                                        "Image": {
                                                                                            "S3Object": {
                                                                                                "Bucket.$": "$.s3.bucket.name",
                                                                                                "Name.$": "$.s3.object.key"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "Resource": "arn:aws:states:::aws-sdk:rekognition:detectText"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "InvalidSQSBodyRecordEventName": {
                                                                    "Type": "Pass",
                                                                    "End": true
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "StartAt": "PutObjectSQSBodyRecord",
                                                            "States": {
                                                                "PutObjectSQSBodyRecord": {
                                                                    "Type": "Task",
                                                                    "End": true,
                                                                    "Parameters": {
                                                                        "Body.$": "$",
                                                                        "Bucket.$": "$.s3.bucket.name",
                                                                        "Key.$": "States.Format('${aws_s3_object_s3_bucket_notification}event={}/year={}/month={}/day={}/{}.json', $.eventName, States.ArrayGetItem(States.StringSplit($.eventDate, '-'), 0), States.ArrayGetItem(States.StringSplit($.eventDate, '-'), 1), States.ArrayGetItem(States.StringSplit($.eventDate, '-'), 2), $.messageId)"
                                                                    },
                                                                    "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "End": true
                                                }
                                            }
                                        },
                                        "End": true,
                                        "ItemsPath": "$.body.Records",
                                        "ItemSelector": {
                                            "attributes.$": "$.attributes",
                                            "awsRegion.$": "$$.Map.Item.Value.awsRegion",
                                            "eventDate.$": "States.ArrayGetItem(States.StringSplit($$.Map.Item.Value.eventTime, 'T'), 0)",
                                            "eventName.$": "$$.Map.Item.Value.eventName",
                                            "eventSource.$": "$$.Map.Item.Value.eventSource",
                                            "eventTime.$": "$$.Map.Item.Value.eventTime",
                                            "eventTimestamp.$": "States.ArrayGetItem(States.StringSplit($$.Map.Item.Value.eventTime, 'T'), 1)",
                                            "eventVersion.$": "$$.Map.Item.Value.eventVersion",
                                            "index.$": "$$.Map.Item.Index",
                                            "messageAttributes.$": "$.messageAttributes",
                                            "md5OfBody.$": "$.md5OfBody",
                                            "messageId.$": "$.messageId",
                                            "receiptHandle.$": "$.receiptHandle",
                                            "requestParameters.$": "$$.Map.Item.Value.requestParameters",
                                            "responseElements.$": "$$.Map.Item.Value.responseElements",
                                            "s3.$": "$$.Map.Item.Value.s3",
                                            "userIdentity.$": "$$.Map.Item.Value.userIdentity"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "End": true
        }
    }
}
